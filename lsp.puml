@startuml
class com.directi.training.lsp.exercice_refractored.Pool {
+ void run()
- void quack(IDuck)
- void swim(IDuck)
+ {static} void main(String[])
}
class com.directi.training.lsp.exercice_refractored.Duck {
+ void quack()
+ void swim()
}
interface com.directi.training.lsp.exercice_refractored.IDuck {
~ void quack()
~ void swim()
}
class com.directi.training.lsp.exercice_refractored.IDuck.IDuckException {
}
class com.directi.training.lsp.exercice_refractored.ElectronicDuck {
- boolean _on
+ void quack()
+ void swim()
+ void turnOn()
+ void turnOff()
}
class com.directi.training.lsp.exercice_refractored.ElectronicDuck.DuckIsOffException {
}


com.directi.training.lsp.exercice_refractored.IDuck <|.. com.directi.training.lsp.exercice_refractored.Duck
com.directi.training.lsp.exercice_refractored.IDuck +.. com.directi.training.lsp.exercice_refractored.IDuck.IDuckException
com.directi.training.lsp.exercice_refractored.Exception <|-- com.directi.training.lsp.exercice_refractored.IDuck.IDuckException
com.directi.training.lsp.exercice_refractored.IDuck <|.. com.directi.training.lsp.exercice_refractored.ElectronicDuck
com.directi.training.lsp.exercice_refractored.ElectronicDuck +.. com.directi.training.lsp.exercice_refractored.ElectronicDuck.DuckIsOffException
com.directi.training.lsp.exercice_refractored.IDuckException <|-- com.directi.training.lsp.exercice_refractored.ElectronicDuck.DuckIsOffException
@enduml